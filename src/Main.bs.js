// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Store = require("./Store.bs.js");
var Utils = require("./Utils.bs.js");
var Express = require("express");
var TokenBucket = require("./TokenBucket.bs.js");
var Core__Option = require("@rescript/core/src/Core__Option.bs.js");

function run(param) {
  var app = Express();
  app.get("/unlimited", (function (param, res) {
          res.status(200).send("Unlimited! Let's go!");
        }));
  Core__Option.forEach(Utils.NaturalNumber.make(10), (function (capacity) {
          var partial_arg = Store.InMemoryStore.make(undefined);
          var rateLimiter = function (param) {
            return TokenBucket.makeBucket(partial_arg, (function (param) {
                          return Date.now();
                        }), capacity, param);
          };
          app.get("/limited", (function (req, res) {
                  Curry._1(rateLimiter, req.ip).then(function (result) {
                        if (result.TAG === /* Ok */0) {
                          return res.status(200).send("Limited, don't over use me!");
                        } else {
                          return res.status(429).send("Too many requests!");
                        }
                      });
                }));
          app.listen(8080);
        }));
}

run(undefined);

exports.run = run;
/*  Not a pure module */
